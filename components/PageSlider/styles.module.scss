@import "@styles/vars.module.scss";

$buttonWidth: 25vw;
$buttonWidthShort: 12vw;

.PageSlider{
	height: 100%;
	position: relative;
	background-color: $darkBlue;
	swiper-container{
		height: 100%;
		width: 100%;
	}
	.header{
		z-index: 200;
		height: 100%;
		width: 100%;
		position: absolute;
		top:0; left: 0;
	}
	.foregroundSlider{
		z-index: 300;
		height: 100%;
		width: 100%;
		position: absolute;
		top:0; left: 0;
		.lineElement{
			/*NOTE: width should equal number of slides times 100vw, then use that sizing basis to position it horizontally*/
			position: absolute;
			top: 60%;
			left: 0vw;
			transform: translate3d(0%, -50%, 0px);
			width: 450vw;
			z-index: -1;
			filter: $filterShadow1;

			svg{
				path {
				  //stroke-dasharray: 10000;
				  //stroke-dashoffset: 10000;
				  //stroke-dasharray: calc(100% * 100vw);
				  //stroke-dashoffset: calc(100% * 100vw);
				  //animation: dash 5s linear forward infinite;
				}

				@keyframes dash {
				  to {
				    stroke-dashoffset: 0;
				  }
				}
			}
		}
	}
	.backgroundSlider{
		z-index: 100;
		height: 100%;
		width: 100%;
		position: absolute;
		top:0; left: 0;
	}
	swiper-slide{
		height: 100%;
		width: 100%;
		display: flex;
		justify-content: center;
		align-items: center;
	}



	//MISC
	[data-placeholder="true"]{
		background: repeating-linear-gradient(
		  45deg,
		  #FFFFFF20,
		  #FFFFFF20 20px,
		  #00000020 20px,
		  #00000020 40px
		);
	}
}


.controls{
	position: absolute;
	bottom: 1vw;
	left: 1vw;
	z-index: 500;
	
	//control states
	[data-visible="false"]{display: none;}

	//Control Buttons
	//NOTE: control state CSS is being set in the `main.scss` file, due it it using global <body> classes
	.controlButton{
		$safeZone: 2em;
		width: $buttonWidth;
		border: solid 0.12em $offWhite;
		border-radius: 1em;
		padding: 1em 1em;
		margin-bottom: 0.5em;
		color: $limeGreen;
		display: flex;
		justify-content: flex-start;
		align-items: center;
		transition: $transitionMedium;
		filter: $filterShadow1;

		.text{
			width: calc(100% - #{$safeZone});
		}
		.icon{
			width: $safeZone;
			display: flex;
			justify-content: center;
			align-items: center;
		}

		//flip arrow icon to re-use for prev button
		&[data-control="initial"]{}
		&[data-control="prev"]{
			.icon img{
				transform: scale(-1, -1);
			}
		}


	}

	//prev/next group layout
	.nextPrevGroup{
		display: flex;
		justify-content: center;
		align-items: center;

		[data-control="prev"]{
			margin-right: 1em;
			width: $buttonWidthShort;
		}
		[data-control="next"]{
			margin-right: 1em;
			width: $buttonWidthShort;
		}
	}


}
